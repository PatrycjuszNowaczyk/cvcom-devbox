services:
  frontend:
    container_name: ${APP_NAME}-frontend
    build:
      context: ./docker/frontend
      dockerfile: Dockerfile
    depends_on:
      - backend
      - db
      - redis
    volumes:
      - ../frontend:/var/www/html:rw
    working_dir: /var/www/html
    networks:
      - default
    ports:
      - "3000:3000"
    restart: always
    command: "npm run dev"

  backend:
    container_name: ${APP_NAME}-backend
    build:
      context: ./docker/backend
      dockerfile: Dockerfile
    depends_on:
      - db
      - redis
    volumes:
      - ./docker/backend/php.ini:/usr/local/etc/php/php.ini
      - ../backend:/var/www/html:rw
    working_dir: /var/www/html
    networks:
      - default
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: always
    command: php-fpm

  db:
    container_name: ${APP_NAME}-db
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ${APP_NAME}
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - default
    restart: always

  redis:
    container_name: ${APP_NAME}-redis
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - default
    restart: always

  nginx:
    container_name: ${APP_NAME}-nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - default
    restart: always

  phpmyadmin:
    container_name: ${APP_NAME}-phpmyadmin
    image: phpmyadmin:latest
    environment:
      - PMA_HOSTS=${APP_NAME}-db
      - PMA_DATABASE=${APP_NAME}
      - PMA_USER=user
      - PMA_PASSWORD=password
      - PMA_ROOT_PASSWORD=password
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - default
    restart: always

volumes:
  db_data:
  redis_data:

networks:
  default:
    driver: bridge
